/*
Package did is corresponding Go package for libindy's anoncreds namespace.
We suggest that you read indy SDK documentation for more information.
*/
package did

import "C"
import (
	"github.com/findy-network/findy-wrapper-go/dto"
	"github.com/findy-network/findy-wrapper-go/internal/c2go"
	"github.com/findy-network/findy-wrapper-go/internal/ctx"
)

// Create creates a DID to a wallet with empty seed which means that seed is
// generated by indy.
func Create(wallet int) ctx.Channel {
	return c2go.CreateAndStoreMyDid(wallet, dto.ToJSON(Did{Seed: ""}))
}

// CreateAndStore creates a DID to a wallet with JSON DID configuration. Use
// this if DID seed is needed.
func CreateAndStore(wallet int, did Did) ctx.Channel {
	return c2go.CreateAndStoreMyDid(wallet, dto.ToJSON(did))
}

// List list DIDs in a wallet.
func List(wallet int) ctx.Channel {
	return c2go.ListDids(wallet)
}

// Key returns DIDs key from wallet. Indy's internal version tries to get the
// key from the ledger if it cannot get from wallet. NOTE! Because we have our
// Ledger Plugin system at the top of the wrappers we cannot guarantee that
// ledger fetch will work. Make sure that the key is stored to the wallet.
func Key(pool, wallet int, didName string) ctx.Channel {
	return c2go.KeyForDid(pool, wallet, didName)
}

// StoreTheir saves their DID to wallet. Use did.Did configuration struct to
// build the JSON string.
func StoreTheir(wallet int, idJSON string) ctx.Channel {
	return c2go.FindyStoreTheirDid(wallet, idJSON)
}

// KeyAndMeta fetches the key and meta data of the DID.
func KeyAndMeta(wallet int, did string) ctx.Channel {
	return c2go.FindyGetMyDidWithMeta(wallet, did)
}

// LocalKey reads the DID's key from a wallet. Use this instead of Key function
// to prevent unnecessary ledger read.
func LocalKey(wallet int, did string) ctx.Channel {
	return c2go.FindyKeyForLocalDid(wallet, did)
}

// SetMeta sets meta data of the DID.
func SetMeta(wallet int, did, meta string) ctx.Channel {
	return c2go.FindySetDidMetadata(wallet, did, meta)
}

// Meta gets meta data of the DID.
func Meta(wallet int, did string) ctx.Channel {
	return c2go.FindyGetDidMetadata(wallet, did)
}

// SetEndpoint sets an endpoint and an endpoint key for a DID. Note that this
// function does not write it to a ledger even the Key function is capable to
// fetch endpoint data from a ledger.
func SetEndpoint(wallet int, did, address, key string) ctx.Channel {
	return c2go.FindySetEndpointForDid(wallet, did, address, key)
}

// Endpoint reads an endpoint values from a wallet and from a ledger if wallet
// does not have it.
func Endpoint(wallet, pool int, did string) ctx.Channel {
	return c2go.FindyGetEndpointForDid(wallet, pool, did)
}
